import csv
import numpy
import matplotlib.pyplot as plt
Global_data = numpy.zeros((11,21))
file_name = "C:/testpy/ELEC3202_lab1/lab1csv.csv"
file = csv.reader(file_name, delimiter = ",")
i1 = 0
with open(file_name, newline='') as File:
    reader = csv.reader(File)
    for row in reader:
        if (i1 > 1) and (i1 < 13):
            #print("============"+str(i1))
            for i in range(1,21):
                #print(row[i])
                Global_data[i1-2,i-1] = row[i]
        i1 = i1 +1
X = 0.15 #line
Ib = 5250.0 # base current
Pb = 2000.0 # base power
Vb = 220.0 # base voltage

Iq = numpy.zeros((4))
Ir = numpy.zeros((4))
dVq = numpy.zeros((4))
dVr = numpy.zeros((4))
Vs = numpy.zeros((4))
Vs = numpy.zeros((4))
delta = numpy.zeros((4))

for i in range(4):
    Iq[i] = float(Global_data[i,9]/Ib*numpy.sqrt(1-(Global_data[i,13])**2))
    Ir[i] = float(Global_data[i,9]/Ib*Global_data[i,13])
    Vs[i] = float(Global_data[i,8]/Vb)
    dVq[i] = Ir[i]*X
    dVr[i] = Iq[i]*X
    delta[i] = numpy.arcsin(float(dVq[i]/Vs[i]))
print(Global_data[0,13])
print(Iq)
print('====')
print(Ir)
#print(numpy.arcsin(1))
print("------")
print(delta)
a = 3
Vs_x1 = numpy.array((0))
Vs_y1 = numpy.array((0))
#Vs_x2 = numpy.array((1))
#Vs_y2 = numpy.array((1))
Vs_x2 = numpy.array((Vs[a]*numpy.cos(delta[a])))
Vs_y2 = numpy.array((Vs[a]*numpy.sin(delta[a])))
print(Vs_x2,Vs_y2)
Vr_x1 = numpy.array((0))
Vr_y1 = numpy.array((0))
Vr_x2 = numpy.array((Vs[a]*numpy.cos(delta[a])+dVr[a]))
Vr_y2 = numpy.array((0))
print(Vr_x2)
dVr_x1 = numpy.array((Vs[a]*numpy.cos(delta[a])+dVr[a]))
dVr_y1 = numpy.array((0))
dVr_x2 = numpy.array((-dVr[a]))
dVr_y2 = numpy.array((0))

dVq_x1 = numpy.array((Vs[a]*numpy.cos(delta[a])))
dVq_y1 = numpy.array((0))
dVq_x2 = numpy.array((0))
dVq_y2 = numpy.array((dVq[a]))
fig, ax = plt.subplots()
print(dVr_x1,dVr_x2)
ax.set_aspect(1)
Vs_vector = ax.quiver(Vs_x1, Vs_y1,Vs_x2, Vs_y2,units='xy' ,scale=1,color = "#FF0000")
Vr = ax.quiver(Vr_x1, Vr_y1, Vr_x2, Vr_y2,units='xy' ,scale=1,color = "#F000F0")
DVr = ax.quiver(dVr_x1, dVr_y1, dVr_x2, dVr_y2,units='xy' ,scale=1,color = "#A0A0A0")
DVq = ax.quiver(dVq_x1, dVq_y1, dVq_x2, dVq_y2,units='xy' ,scale=1,color = "#A0FF00")
if a==0:
    lab = "No load"
if a == 1:
    lab = "25%R"
if a == 2:
    lab = "25%RL"
if a == 3:
    lab = "50%L"
plt.title(lab,fontsize=10)
plt.legend(['Vs', 'Vr','dVr','dVq'],bbox_to_anchor = (1, 4))
plt.savefig("C:/testpy/ELEC3202_lab1/"+str(lab)+".png", bbox_inches='tight')
#plt.ylim(-0.1,2)
plt.xlim(0,1)
plt.show()
#part2 PV curves
PLR = numpy.zeros((3))
VLR = numpy.zeros((3))
PR = numpy.zeros((3))
VR = numpy.zeros((3))
for i in range(3):
        VLR[i] = Global_data[i+5,8]/Vb
        PLR[i] = Global_data[i+5,10]/Pb
        VR[i] =  Global_data[i+8,8]/Vb
        PR[i] = Global_data[i+8,10]/Pb
zeroV = Global_data[4,8]/Vb
zeroP = Global_data[4,10]/Pb
print(zeroV, zeroP)
print(PLR,VLR,PR, VR)
plt.title("PV diagram")
plt.xlabel("P, u")
plt.ylabel("V, u")
plt.plot(PLR,VLR,"b")
#plt.plot(zeroP, zeroV,"go")
plt.plot(PR,VR,"r")
plt.legend(['LR', 'R'],bbox_to_anchor = (1, 1))
plt.savefig("C:/testpy/ELEC3202_lab1/"+"PV diagram"+".png", bbox_inches='tight')
plt.show()
