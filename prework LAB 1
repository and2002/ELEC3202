import cmath
import math
import numpy
import matplotlib.pyplot as plt
N = 20000
angle = 10
#Transmission line
R = 0
X = 3
#Sending end voltage
Vs = 1
#Load
pf = 0
#inductive = 1
#capacitive = -1
a = 1
if a == 1:
    title = "inductive load"
else:
    title = "capacitive load"
Matrix = numpy.zeros((2*angle,N))
d = 7
Maximum = numpy.zeros((angle,d))
col = ["41","43","45","47","49","4B","4D","4F","81","83","85","87","89","8B","8D","8F","F1","F3","F5","F7","F9","FB","FD","FF"]
for i2 in range(1,angle): #power factor
    cos_fi = float(i2 / 10)
    sin_fi = a * float(numpy.sqrt(1 - cos_fi ** 2))
    print("cos = "+str(cos_fi)+"  sin = "+str(sin_fi))
    maxP = 0
    maxZ = complex(0,0)
    for i1 in range(1,N):#impedance
        Z = float(i1/100)
        # prepare for calculations
        I = Vs /((R + 1j*X) + complex(Z*cos_fi,Z*sin_fi))
        Vr = I*complex(Z*cos_fi,Z*sin_fi)
        P = (I.conjugate()*Vr).real
        Matrix[i2*2+1][i1] = abs(Vr)
        Matrix[i2*2][i1] = P
        if P>maxP:
            maxP = P
            maxZ = complex(Z*cos_fi,Z*sin_fi)
            maxVr = Vr
    Maximum[i2][0] = cos_fi = float(i2 / 10) #cos
    Maximum[i2][1] = sin_fi = a * float(numpy.sqrt(1 - cos_fi ** 2)) #sin
    Maximum[i2][2] = maxZ.real #real
    Maximum[i2][3] = maxZ.imag #imag
    Maximum[i2][4] = maxP  # power
    Maximum[i2][5] = cmath.phase(Vs)-cmath.phase(maxVr)
    Maximum[i2][6] = abs(maxZ)
print("cos,sin,Zreal,Zinag,P, angle(rad),Z amplitude")
print(Maximum)
plt.figure(1)
plt.title(title)
plt.xlabel('P')
plt.ylabel('Vr')
for i in range(1,angle):
    plt.plot(Matrix[2*i],Matrix[2*i+1] , color = "#0000FF"+str(col[i]))
plt.savefig(str(title)+".png", bbox_inches='tight')
plt.show()
